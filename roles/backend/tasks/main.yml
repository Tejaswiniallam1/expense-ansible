- name: Disable Existing Nodejs.
  ansible.builtin.shell: dnf module disable mysql -y

- name: Enable NODEJS18 Version"
  ansible.builtin.shell: dnf module enable nodejs:18 -y

- name: Install NodeJS
  ansible.builtin.dnf:
    name: nodejs
    state: installed

- name: Configure Backend Service
  ansible.builtin.copy:
    src: backend.service
    dest: /etc/systemd/system/backend.service

- name: Add the user 'expense'
  ansible.builtin.user:
    name: expense

- name: App Prerequitsies
  ansible.builtin.include_role:
    name: common
    tasks_from: app_prereq

- name: downloading application dependencies
  community.general.npm:
    path: /app

- name: reloading the systemd and start backend server
  ansible.builtin.systemd_service:
    name: backend
    enabled: true
    state: restarted

- name: Reset MySQL
  ansible.builtin.shell: sudo dnf module reset mysql -y

- name: Install MySQL client
  ansible.builtin.dnf:
    name: mysql
    state: installed

- name: Install Python library for MySQL
  ansible.builtin.dnf:
    name: python3-PyMySQL
    state: installed

- name: load schema
  community.mysql.mysql_db:
    state: import
    name: all
    target: /app/schema/backend.sql
    login_user: root
    login_password: ExpenseApp@1
    login_host: mysql-dev.tejudevops.online